import pygame
import os
import random


#Mapa 1,2 e 3 em matrizes
game_map = [['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','0','0','0','0','0','1','0','0','0','0','0','0','1','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','17','0','1','1','1','17','17','0','1','0','17','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','1','17','0','1','0','1','17','0','1','0','1','17','0','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','1','1','1','17','0','1','0','1','17','0','1','1','1','17','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','1','17','17','1','1','1','17','17','1','0','1','17','0','17','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','21','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0'],
           ['1','1','1','1','1','1','1','16','16','16','16','16','16','16','16','16','16','16','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1']]

game_map2=[['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','6','6','0','6','6','6','0','6','6','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','6','0','0','0','6','0','0','6','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','2','0','0','0','6','6','0','0','6','0','0','6','6','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','0','0','0','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','1','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','1','1','0','0','0','1','0','0','0','0','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','1','1','1','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','2','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','21','0','0','2','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','1','1','0','1','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','2','2','2','2','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','2','2','2','2','14','14','14','14','2','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','2','0','0','0','0','0','0','0','2','2','2','14','14','14','14','14','14','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','16','16','16','16','16','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','16','16','16','16','2','16','16','16','16','2','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','1','1','1','1','15','15','15','15','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','16','16','16','16','16','16','16','1','1','1','15','15','15','15','15','15','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','17','17','17','17','17','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','17','17','17','17','17','17','17','17','17','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','16','16','16','2','2','2','2','2','2','2','2','14','14','14','14','14','14','14','14','14','14','14','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','16','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0']]

game_map3 = [['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','6','6','6','6','0','0','0','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','6','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','6','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1 ','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','6','0','0','0','0','0','0','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','1','1','1','15','15','15','1','1','1','15','0','15','1','1','1','15','15','15','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','6','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','6','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','1','0','1','15','0','15','1','0','1','15','0','15','1','0','1','15','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','0','0''0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0''0','0','1','1','1','15','15','15','1','0','1','15','0','15','1','1','1','15','15','15','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','2','2','2','0','0','0','0','0','0','0','0','6','6','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','6','0','0','0','0','0','6','0','0','0','0','0','6','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','0','0','0','0','6','1','0','0','15','15','0','1','0','1','15','0','15','1','0','1','0','0','15','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','21','0','0','0','0','0','0','0'],
           ['2','2','2','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','6','6','6','6','6','6','6','6','6','6','0','0','0','0','0','0','6','6','6','6','6','6','6','6','6','6','0','0','0','0''0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','1','0','0','15','0','15','1','1','1','0','15','0','1','0','1','15','15','15','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','6','0','0','0','0','0','0','0','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','6','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','2','0','0','0','0','2','0','2','2','2','2','0','2','2','2','2','0','2','2','2','2','2','0','2','2','2','2','0','2','2','2','2','0','2','0','2','2','2','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','0','0','0','0','0','0','1','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','0','0','0','0','0','0','6','6','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','17','17','17','0','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','0','0','0','0','2','0','0','0','0','0','0','2','0','0','0','2','0','0','2','0','2','0','0','0','0','2','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0,''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','17','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','2','2','2','2','0','2','2','2','2','0','0','0','2','0','0','0','2','2','2','2','0','2','0','2','2','0','2','0','2','0','0','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','0','0','0','0','0','0','0','1','1','0','0','0','0','0','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','17','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','0','0','2','14','14','14','14','14','14','14','14','2','0','0','2','0','0','0','0','0','0','0','2','0','0','0','2','0','0','0','2','0','0','2','0','2','0','0','2','0','2','0','2','0','0','2','0','0','2','16','16','16','16','16','16','16','16','2','0','2','16','16','16','16','16','16','16','16','2','0','2','16','16','16','16','16','16','16','16','2','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','14','14','14','14','14','14','14','14','1','1','1','1','1','14','14','14','14','14','14','14','14','14','14','14','14','14','14','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','17','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['2','2','2','2','15','15','15','15','15','15','15','15','2','0','0','2','2','2','2','0','2','2','2','2','0','0','0','2','0','0','0','2','0','0','2','0','2','2','2','2','0','2','0','2','2','2','2','0','0','2','17','17','17','17','17','17','17','17','2','0','2','17','17','17','17','17','17','17','17','2','0','2','17','17','17','17','17','17','17','17','2','0','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','1','1','1','1','1','1','1','1','1','1','15','15','15','15','15','15','15','15','1','1','1','1','1','15','15','15','15','15','15','15','15','15','15','15','15','15','15','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0''0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','17','17','17','0','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0']]

game_map4 = [['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','0','0','0','0','0','1','0','0','0','0','0','0','1','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','21','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','17','0','1','1','1','17','17','0','1','0','17','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','1','17','0','1','0','1','17','0','1','0','1','17','0','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','1','1','0','0','0','0','0','0','0','1','1','1','17','0','1','0','1','17','0','1','1','1','17','17','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
           ['1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','1','17','17','1','1','1','17','17','1','0','1','17','0','17','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','21','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1'],
           ['1','1','1','1','1','1','1','16','16','16','16','16','16','16','16','16','16','16','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1']]


#Chamando os blocos
tile_size=40
dirt_image = pygame.image.load('Imagens/Tiles/1.png')
dirt_image = pygame.transform.scale(dirt_image, (tile_size, tile_size))
grass_image = pygame.image.load('Imagens/Tiles/2.png')
grass_image = pygame.transform.scale(grass_image, (tile_size, tile_size))
rockdirt_image = pygame.image.load('Imagens/Tiles/3.png')
rockdirt_image = pygame.transform.scale(rockdirt_image, (tile_size, tile_size))
sand_image = pygame.image.load('Imagens/Tiles/4.png')
sand_image = pygame.transform.scale(sand_image, (tile_size, tile_size))
snow_image = pygame.image.load('Imagens/Tiles/5.png')
snow_image = pygame.transform.scale(snow_image, (tile_size, tile_size))
rock_image = pygame.image.load('Imagens/Tiles/6.png')
rock_image = pygame.transform.scale(rock_image, (tile_size, tile_size))
water_image = pygame.image.load('Imagens/Tiles/14.png')
water_image = pygame.transform.scale(water_image, (tile_size, tile_size))
waterf_image = pygame.image.load('Imagens/Tiles/15.png')
waterf_image = pygame.transform.scale(waterf_image, (tile_size, tile_size))
lava_image = pygame.image.load('Imagens/Tiles/16.png')
lava_image = pygame.transform.scale(lava_image, (tile_size, tile_size))
lavaf_image = pygame.image.load('Imagens/Tiles/17.png')
lavaf_image = pygame.transform.scale(lavaf_image, (tile_size, tile_size))
signexit_image = pygame.image.load('Imagens/Tiles/20.png')
signexit_image = pygame.transform.scale(signexit_image, (tile_size, tile_size))
signr_image = pygame.image.load('Imagens/Tiles/21.png')
signr_image = pygame.transform.scale(signr_image, (tile_size, tile_size))
signl_image = pygame.image.load('Imagens/Tiles/22.png')
signl_image = pygame.transform.scale(signl_image, (tile_size, tile_size))

#Chamando as imagens do background
pine1_image = pygame.image.load('Imagens/Background/pine1.png')
pine2_image = pygame.image.load('Imagens/Background/pine2.png')
mountain_image = pygame.image.load('Imagens/Background/mountain.png')
sky_image = pygame.image.load('Imagens/Background/sky.png')
sky2_image = pygame.image.load('Imagens/Background/sky_small.png')
sky3_image = pygame.image.load('Imagens/Background/sky3.png')
back_level2_1 = pygame.image.load('Imagens/Background/backlvl2_1.png')
back_level2_2 = pygame.image.load('Imagens/Background/backlvl2_2.png')
back_level2_3 = pygame.image.load('Imagens/Background/backlvl2_3.png')
back_level2_4 = pygame.image.load('Imagens/Background/backlvl2_4.png')
tela_image = pygame.image.load('Imagens/Background/tela.png')

#chamando as imagens dos botões
fundo_img = pygame.image.load('Imagens/tela/fundo.png')
jogar_img = pygame.image.load('Imagens/tela/jogar.png')
jogar_img = pygame.transform.scale(jogar_img, (int(jogar_img.get_width() * 1), int(jogar_img.get_height() * 1)))
sobre_img = pygame.image.load('Imagens/tela/sobre.png')
comojogar_img = pygame.image.load('Imagens/tela/comojogar.png')
personagem1_img = pygame.image.load('Imagens/tela/personagem1.png')
personagem1_img = pygame.transform.scale(personagem1_img, (int(personagem1_img.get_width() * 3), int(personagem1_img.get_height() * 3)))
personagem2_img = pygame.image.load('Imagens/tela/personagem2.png')
personagem2_img = pygame.transform.scale(personagem2_img, (int(personagem2_img.get_width() * 3), int(personagem2_img.get_height() * 3)))
telacomojogar= pygame.image.load('Imagens/tela/telacomojogar.png')
telafinal= pygame.image.load('Imagens/tela/telafinal.png')
telasobre1= pygame.image.load('Imagens/tela/telasobre1.png')
telasobre2= pygame.image.load('Imagens/tela/telasobre2.png')
flechadir= pygame.image.load('Imagens/tela/flechadir.png')
flechadir = pygame.transform.scale(flechadir, (int(flechadir.get_width() * 0.15), int(flechadir.get_height() * 0.15)))
flechaesq= pygame.image.load('Imagens/tela/flechaesq.png')
jogarnov_img = pygame.image.load('Imagens/tela/jogarnov.png')
jogarnov_img = pygame.transform.scale(jogarnov_img, (int(jogarnov_img.get_width() * 2), int(jogarnov_img.get_height() * 2)))

def main():
    pygame.init()
    tela=pygame.display.set_mode([800, 640])              #Resolução
    pygame.display.set_caption("CTC Adventure")  #nome jogo(A ser decidido)

    #Variaveis de movimentação
    moving_left = False
    moving_right = False
    restart = False

    #Framerate
    clock=pygame.time.Clock()
    fps=300

    #Gravidade
    GRAVITY=0.5

    #Todo o background do jogo, condicionado a cada missão
    def draw_bg():
      if level==1:
        tela.blit(sky_image, (-bg_scroll*0.5,0))
        tela.blit(mountain_image, (-bg_scroll*0.9,220))

      if level==2:
          width_image=back_level2_1.get_width()
          for x in range(5):
            tela.blit(sky2_image, ((x*width_image)-bg_scroll*0.5,0))
          tela.blit(back_level2_1, (-bg_scroll*0.9,220))
          tela.blit(back_level2_2, (1*width_image-bg_scroll*0.9,220))
          tela.blit(back_level2_3, (2*width_image-bg_scroll*0.9,220))
          tela.blit(back_level2_4, (3*width_image-bg_scroll*0.9,220))

      if level==3:
        width3=tela_image.get_width()
        for x in range(5):
          tela.blit(sky3_image, ((x*width3)-bg_scroll*0.5,0))
          tela.blit(tela_image, ((x*width3)-bg_scroll*0.9,220))

      if level==4:
        tela.blit(sky_image, (-bg_scroll*0.5,0))
        tela.blit(mountain_image, (-bg_scroll*0.9,220))
  
    #Configurações para os blocos
    #Tela
    screen_width=800
    screen_height=640

    #Outros
    ROWS=16
    COLS=150
    tile_size=40
    tile_types=5

    #começo dos níveis   
    level=1

    #Scroll: tanto do back e tiles      
    screen_scroll=0 #Scroll dos objetos
    bg_scroll=0 #Scroll do background

    #passagem: indica quando houver a troca de nível
    passagem=False

    #variavel jogo
    main_menu = True

    #Diferentes personagens: 1 e 2
    pers1=False
    pers2=False

    #Imagem Branca
    corbranca=(255, 255, 255)


    #Classe botões: cria os botões e funcionalidades
    class Button():
      def __init__(self, x, y, image):
          self.image = image
          self.rect = self.image.get_rect()
          self.rect.x = x
          self.rect.y = y
          self.clicked = False

      def draw(self):
          action = False

          #Pega a posição do mouse
          pos = pygame.mouse.get_pos()

          #Ira checar se o mouse esta no lugar certo e esta apertado
          if self.rect.collidepoint(pos):
              if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                  action = True
                  self.clicked = True

          if pygame.mouse.get_pressed()[0] == 0:
              self.clicked = False


          #Mostra o Botão
          tela.blit(self.image, self.rect)

          return action

    #Configurações para tela dos botões
    jogar_button = Button(screen_width // 1 - 200, screen_height // 1 - 543, jogar_img)
    comojogar_button = Button(screen_width // 1 - 200, screen_height // 1 - 350, comojogar_img)
    sobre_button = Button(screen_width // 1 - 205, screen_height // 1 - 450, sobre_img)
    personagem1_button = Button(screen_width // 2 - 340, screen_height // 2 - 88, personagem1_img)
    personagem2_button = Button(screen_width // 2 - 165, screen_height // 2 - 88, personagem2_img)
    flechadir_button = Button(screen_width // 2 - 350, screen_height // 2 + 250, flechadir)
    jogarnov_button = Button(screen_width // 1 - 530, screen_height // 1 - 260, jogarnov_img)

    #Funções para jogador dentro da classe PP
    class PP(pygame.sprite.Sprite):
        def __init__(self, char_type, x, y, scale, speed):
                    pygame.sprite.Sprite.__init__(self)
                    self.alive = True 
                    self.speed=speed
                    self.char_type = char_type
                    self.health = 100
                    self.max_health = self.health
                    self.direction=1
                    self.vel_y=0
                    self.jump =False
                    self.in_air=True
                    self.flip=False
                    self.animation_list=[]
                    self.frame_index=0
                    self.action = 0
                    self.update_time = pygame.time.get_ticks()
                    temp_list=[]
      
                    #Aqui é feito animação do personagem andando(flip de imagens)
                    for i in range(2):
                        img1 = pygame.image.load(f"Imagens/{char_type}/{i}.png")
                        img1 = pygame.transform.scale(img1, (int(img1.get_width() * scale), int(img1.get_height() * scale)))
                        temp_list.append(img1)
           
                    self.animation_list.append(temp_list)
                    temp_list=[]
                    #Aqui é feito animação do personagem parado(flip de imagens)
                    for i in range(1):
                        img1 = pygame.image.load(f"Imagens/{self.char_type}-Parado/{i}.png")
                        img1 = pygame.transform.scale(img1, (int(img1.get_width() * scale), int(img1.get_height() * scale)))
                        temp_list.append(img1)

                    self.animation_list.append(temp_list)
                    self.image= self.animation_list[self.action][self.frame_index]
                    self.rect = self.image.get_rect()
                    self.rect.center = (x, y)
                    self.width=self.image.get_width()
                    self.height=self.image.get_height()
                    
                    #AI Variaveis
                    self.move_counter=0
                    self.idling=False
                    self.idling_counter=0
  
        def update(self):
		                self.update_animation()

                
        #Definições de movimentação
        def move(self, moving_left,moving_right):
            screen_scroll=0
            dx=0
            dy=0
            if moving_left:
                dx=-self.speed
                self.flip = True
                self.direction = -1 
            if moving_right:
                dx=self.speed
                self.flip = False
                self.direction = 1
            if (self.jump == True) and (self.in_air == False):   
                self.vel_y = -11
                self.jump = False
                self.in_air=True
            
            #Gravidade
            self.vel_y += GRAVITY
            if self.vel_y >10:
                self.vel_y
            dy += self.vel_y

            #Colisões dos personagens
            if self.char_type=='Personagem1' or self.char_type=='Personagem2':
               for g in range(len(tile_rects)):
                   #checa colisão em x
                   if tile_rects[g].colliderect(self.rect.x + dx, self.rect.y, self.width, self.height):
                       dx = 0
                   #checa colisão em y
                   if tile_rects[g].colliderect(self.rect.x, self.rect.y + dy, self.width, self.height):
                       #checa colisão com teto
                       if self.vel_y < 0:
                           self.vel_y = 0
                           dy = tile_rects[g].bottom - self.rect.top
                       #checa colisão com chão
                       elif self.vel_y >= 0:
                           self.vel_y = 0
                           self.in_air = False
                           dy = tile_rects[g].top - self.rect.bottom

            #Colisões dos inimigos (igual aos personagens)
      
            if self.char_type=='Professor1' or self.char_type=='Professor2' or self.char_type=='Professor3'or self.char_type=='Professor4' or self.char_type=='Professor5' or self.char_type=='Professor6':            
             for g in range(len(tile_rects)):
                 #checa colisão em x
                 if tile_rects_ini[g].colliderect(self.rect.x + dx, self.rect.y, self.width, self.height):
                     dx = 0
                  #checa colisão em y
                 if tile_rects_ini[g].colliderect(self.rect.x, self.rect.y + dy, self.width, self.height):
                     #checa colisão com teto
                     if self.vel_y < 0:
                         self.vel_y = 0
                         dy = tile_rects[g].bottom - self.rect.top
                     #checa colisão com chão
                     elif self.vel_y >= 0:
                         self.vel_y = 0
                         self.in_air = False
                         dy = tile_rects[g].top - self.rect.bottom
          
            #Checagem contato com Lava e Água 
            for l in range(len(tile_lava)):
                if tile_lava[l].colliderect(self.rect.x, self.rect.y + dy, self.width, self.height):
                    dx = 0
                    self.health = 0
                if tile_rects[l].colliderect(self.rect.x, self.rect.y + dy, self.width, self.height):
                    if self.vel_y < 0:
                        self.vel_y = 0
                        dy = tile_rects[l].bottom - self.rect.top
                        self.health = 0
                    else:
                        self.vel_y = 0
                        self.in_air = False
                        dy = tile_rects[l].top - self.rect.bottom
                        self.health = 0
            
            #Checa se o jogador ou cai para baixo além do mapa e checa se o jogador ultrapassa a altura do jogo
            if self.rect.bottom<0:
              self.health = 0
            if self.rect.bottom>640:
              self.health=0

            #Movimentação
            self.rect.x += dx
            self.rect.y += dy

        #Animação do personagem
        def update_animation(self):
            #Isso aqui é feito para quando acabar as imagens voltar para imagem zero e assim ir fazendo o loop
            ANIMATION_COOLDOWN = 120  #Tempo para troca de imagens
            self.image=self.animation_list[self.action][self.frame_index]
            if pygame.time.get_ticks() - self.update_time > ANIMATION_COOLDOWN:
                self.update_time = pygame.time.get_ticks()
                self.frame_index += 1
            if self.frame_index >=len(self.animation_list[self.action]):
                self.frame_index=0

        #Inversão da imagem do jogador dependendo do sentido que ele caminha
        def update_action(self, new_action):
            if new_action != self.action:
                self.action = new_action
                self.frame_index=0
                self.update_time=pygame.time.get_ticks()

        #Checa se esta vivo
        def check_alive(self):
		        if self.health <= 0:
			        self.speed = 0
			        self.alive = False 
        
        #Inteligencia artificial dos inimigos
        def ai(self):
          if player.alive:
            if self.idling==False and random.randint(1, 200)==1:
              self.update_action(1)
              self.idling=True
              self.idling_counter=50
            if self.idling==False:
              if self.direction==1:
                ai_moving_right=True
              else:
                ai_moving_right=False
              ai_moving_left=not ai_moving_right
              self.move(ai_moving_left,ai_moving_right)
              self.move_counter += 1 
              self.update_action(0)
              
              if self.move_counter >tile_size:
                self.direction*= -1
                self.move_counter*=-1
            else:
              self.idling_counter -= 1
              if self.idling_counter <=0:
                self.idling=False

        def draw(self):
            tela.blit(pygame.transform.flip(self.image, self.flip, False),(self.rect.x,self.rect.y))

        def drawAI(self):
            tela.blit(pygame.transform.flip(self.image, self.flip, False),(self.rect.x+screen_scroll,self.rect.y))
    
    def atualp():
        #print(pers1,pers2)
        return(pers1, pers2, main_menu)

    end_game=False
    Inicio=False
    flag=0
    sobre=False
    sobre2=False
    como_jogar=False
    main_menu=True  
    sair=False

    #Estrutura para fechar jogo
    while sair==False:    
        #Menu inicial
        if main_menu == True:
          tela.fill(corbranca)
          tela.blit(fundo_img, (0, 0))
          character = 'Personagem1'
          if jogar_button.draw():
             if (flag==1):
                  main_menu = False

          if sobre_button.draw():
                  sobre=True
                  sobre2=False
                  como_jogar=False
                  main_menu = False

          if comojogar_button.draw():
                  sobre=False
                  sobre2=False
                  como_jogar=True
                  main_menu = False
  
          if personagem1_button.draw():
              pers1=True
              pers2=False
              flag = 1
          if personagem2_button.draw():
              flag = 1
              pers1=False
              pers2=True
          if pers1: 
              character = 'Personagem1'
          if pers2: 
              character = 'Personagem2' 

          #Jogador - A parte mais importante!
          player=PP(character,100,400,1.8,5)

          #Inimigos do Level 1
          inimigo0=PP('Professor1',3400,200,1.8,3.9)
          inimigo1=PP('Professor1',3500,200,1.8,3.9)
       
          inimigo12=PP('Professor2',3600,200,0.45,3.9)
          inimigo13=PP('Professor2',3700,200,0.45,3.9)
       
          inimigo14=PP('Professor3',3800,200,1.8,3.9)
          inimigo15=PP('Professor3',3900,200,1.8,3.9)
       
          inimigo16=PP('Professor4',4000,200,1.8,3.9)
          inimigo17=PP('Professor4',4100,200,1.8,3.9)
       
          inimigo18=PP('Professor5',4200,200,0.23,3.9)
          inimigo19=PP('Professor5',4300,200,0.23,3.9)
       
          inimigo20=PP('Professor6',4400,200,1.8,3.9)
          inimigo21=PP('Professor6',4500,200,1.8,3.9)
       
          inimigo22=PP('Professor1',4600,200,1.8,3.9)
          inimigo23=PP('Professor1',4700,200,1.8,3.9)
       
          inimigo24=PP('Professor2',4800,200,0.45,3.9)
          inimigo25=PP('Professor2',4900,200,0.45,3.9)
       
          inimigo26=PP('Professor3',5000,200,1.8,3.9)
          inimigo27=PP('Professor3',5100,200,1.8,3.9)
       
          inimigo28=PP('Professor4',5200,200,1.8,3.9)
          inimigo29=PP('Professor4',5300,200,1.8,3.9)
       
          inimigo30=PP('Professor5',5400,200,0.23,3.9)
          inimigo31=PP('Professor5',5500,200,0.23,3.9)
       
          inimigo32=PP('Professor6',5600,200,1.8,3.9)
          inimigo33=PP('Professor6',5700,200,1.8,3.9)
       
          inimigo34=PP('Professor1',5800,200,1.8,3.9)
          inimigo35=PP('Professor1',5900,200,1.8,3.9)
       
          inimigo36=PP('Professor2',6000,200,0.45,3.9)
          inimigo37=PP('Professor2',6100,200,0.45,3.9)


          #Level 2
          #inimigo2=PP('Professor',1010,520,1.8,4)
          inimigo2=PP('Professor1',1010,400,1.8,4)
          inimigo3=PP('Professor2',2050,550,0.45,4)
          inimigo4=PP('Professor3',2050,550,1.8,4)
          inimigo5=PP('Professor4',3960,103,1.8,4)
          inimigo6=PP('Professor5',5600,370,0.23,4)
          inimigo7=PP('Professor6',5500,370,1.8,4)
          inimigooito=PP('Professor2', 1010, 400, 0.45, 4)
          atualp()

          #Level 3
          inimigo101=PP('Professor5',850,383,.25,4)
          inimigo102=PP('Professor1',1410,383,1.8,4)
          inimigo103=PP('Professor6',1690,223,1.8,4)
          inimigo104=PP('Professor2',4085,543,.45,4)
          inimigo105=PP('Professor3',3465,300,1.8,4)
          inimigo106=PP('Professor5',3870,50,.25,4)
          inimigo107=PP('Professor4',7505,263,1.8,4)
          inimigo108=PP('Professor6',7790,263,1.8,4)
          inimigo109=PP('Professor2',7920,263,.45,4)
          inimigo110=PP('Professor5',11175,303,1,4)


        #Tela sobre1
        if sobre==True:
          tela.fill(corbranca)
          tela.blit(telasobre1, (0, 0))
          if flechadir_button.draw():
                  sobre2=True
                  sobre=False
        
        #Tela sobre2
        if sobre2==True:
          tela.fill(corbranca)
          tela.blit(telasobre2, (0, 0))
          if flechadir_button.draw():
              sobre2=False
              main_menu=True

        #Tela Como Jogar
        if como_jogar==True:
          tela.fill(corbranca)
          tela.blit(telacomojogar, (0, 0))
          if flechadir_button.draw():
              como_jogar=False
              main_menu=True

        #Tela Fim do jogo e configurações para restart
        if end_game==True:
          tela.fill(corbranca)
          tela.blit(telafinal, (0, 0))
          if jogarnov_button.draw():
              end_game=False
              como_jogar=False
              main_menu=True
              player.health=100
              player.rect.x=100
              player.rect.y=400
              player.vel_y=0
              screen_scroll=0
              bg_scroll = 0
              level=1 
        
        #Inicio do jogo, aqui tudo começa
        if main_menu==False and sobre==False and sobre2==False and como_jogar==False and end_game==False:
        #ScreenScrool dinâmica
          if (player.rect.right > 390):
            player.rect.x -= player.speed
            screen_scroll += - player.speed
            bg_scroll -= - player.speed
          if (player.rect.right < 280 and screen_scroll!=0):
            player.rect.x += player.speed
            screen_scroll -= - player.speed
            bg_scroll += - player.speed

          #Troca de MAPA de acordo com o nível
          if level==1:
            variavel=game_map
          if level==2:
            variavel=game_map2
          if level==3:
            variavel=game_map3
          if level==4:
            variavel=game_map4

          level=3
          #Leitura dos NIVEIS
          draw_bg()
          tile_rects = []
          tile_lava = []
          tile_rects_ini = []
          tile_rects_placa=[]
          y = 0

          for row in variavel:
              x = 0
              for tile in row:
                if tile == '1':
                  tela.blit(dirt_image, ( x * tile_size+screen_scroll, y * tile_size))
                if tile == '2':
                  tela.blit(grass_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '3':
                  tela.blit(rockdirt_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '4':
                  tela.blit(sand_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '5':
                  tela.blit(snow_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '6':
                  tela.blit(rock_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '14':
                  tela.blit(water_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '15':
                  tela.blit(waterf_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '16':
                  tela.blit(lava_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '17':
                  tela.blit(lavaf_image, (x * tile_size+screen_scroll, y * tile_size))              
                if tile == '20':
                  tela.blit(signexit_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '21':
                  tela.blit(signr_image, (x * tile_size+screen_scroll, y * tile_size))
                if tile == '22':
                  tela.blit(signl_image, (x * tile_size+screen_scroll, y * tile_size))
                #TileRect Append
                if (tile == '1')or(tile == '2')or(tile == '3')or(tile == '4')or(tile == '5')or(tile == '6'):
                  tile_rects.append(pygame.Rect(x * tile_size+screen_scroll, y * tile_size, tile_size, tile_size))
                #TileLava Append
                if (tile=='17')or(tile=='16')or(tile=='14')or(tile=='15'):
                  tile_lava.append(pygame.Rect(x * tile_size+screen_scroll, y * tile_size, tile_size, tile_size))
                #TileInimigos Append
                if (tile == '1')or(tile == '2')or(tile == '3')or(tile == '4')or(tile == '5')or(tile == '6'):
                  tile_rects_ini.append(pygame.Rect(x * tile_size, y * tile_size, tile_size, tile_size))
                #placa Passa missão
                if (tile=='21'):
                  tile_rects_placa.append(pygame.Rect(x * tile_size+screen_scroll, y * tile_size, tile_size, tile_size))
                x += 1
              y += 1

          
          level=3
          #inimigos do LEVEL 1
          if level==1:
            inim_level_1=[inimigo0, inimigo1, inimigo12, inimigo13, inimigo14, inimigo15, inimigo16, inimigo17, inimigo18, inimigo19, inimigo20, inimigo21, inimigo22, inimigo23, inimigo24, inimigo25, inimigo26, inimigo17, inimigo28, inimigo29, inimigo30, inimigo31, inimigo32, inimigo33,inimigo34, inimigo35, inimigo36, inimigo37] 
            for i in inim_level_1:
              i.update_animation()
              i.ai()
              i.drawAI()

          #inimigos do LEVEL 2
          if level==2:
            if screen_scroll>-1220:
              inimigooito.update_animation()
              inimigooito.ai()
              inimigooito.drawAI()
  
            if screen_scroll<-1220 and screen_scroll>-2515:
              inimigo3.update_animation()
              inimigo3.ai()
              inimigo3.drawAI()
              inimigo4.update_animation()
              inimigo4.ai()
              inimigo4.drawAI()

            if screen_scroll<-3115 and screen_scroll>-4675:
              inimigo5.update_animation()
              inimigo5.ai()
              inimigo5.drawAI()

            if screen_scroll<-4400 and screen_scroll>-6000:
              inimigo6.update_animation()
              inimigo6.ai()
              inimigo6.drawAI()
              inimigo7.update_animation()
              inimigo7.ai()
              inimigo7.drawAI()

          #inimigos do LEVEL 3
          if level==3:
              inimigo101.update_animation()
              inimigo101.ai()
              inimigo101.drawAI()

              inimigo102.update_animation()
              inimigo102.ai()
              inimigo102.drawAI()

              inimigo103.update_animation()
              inimigo103.ai()
              inimigo103.drawAI()

              inimigo104.update_animation()
              inimigo104.ai()
              inimigo104.drawAI()

              inimigo105.update_animation()
              inimigo105.ai()
              inimigo105.drawAI()

              inimigo106.update_animation()
              inimigo106.ai()
              inimigo106.drawAI()

              inimigo107.update_animation()
              inimigo107.ai()
              inimigo107.drawAI()

              inimigo108.update_animation()
              inimigo108.ai()
              inimigo108.drawAI()

              inimigo109.update_animation()
              inimigo109.ai()
              inimigo109.drawAI()

              inimigo110.update_animation()
              inimigo110.ai()
              inimigo110.drawAI()

        
              
          print(player.rect.x - screen_scroll, player.rect.y)

          #JOGADOR
          player.update_animation()  #faz o update a partir dos fps
          player.update()
          player.draw()              #chama jogador

          #TROCA LEVELS
          for g in range(len(tile_rects_placa)):
             #checa colisão em x
             if tile_rects_placa[g].colliderect(player.rect.x, player.rect.y, player.width, player.height):
                passagem=True
                screen_scroll=0
                bg_scroll=0
                if level==3:
                  end_game=True

             #checa colisão em y
             if tile_rects_placa[g].colliderect(player.rect.x, player.rect.y, player.width, player.height):
                passagem=True
                screen_scroll=0
                bg_scroll=0
  
          #Faz a passagem dos níveis
          if passagem==True:
            level +=1
            passagem=False

          real_time_x_player=player.rect.x-screen_scroll  #Posição relativa

          #CHOQUE Com Inimigos LEVEL1 e feature do Mario        
          if level==1:
            inim_level_1=[inimigo0, inimigo1, inimigo12, inimigo13, inimigo14, inimigo15, inimigo16, inimigo17, inimigo18, inimigo19, inimigo20, inimigo21, inimigo22, inimigo23, inimigo24, inimigo25, inimigo26, inimigo17, inimigo28, inimigo29, inimigo30, inimigo31, inimigo32, inimigo33,inimigo34, inimigo35, inimigo36, inimigo37]
            for x in range(len(inim_level_1)):
              if inim_level_1[x].rect.x>real_time_x_player:
                if inim_level_1[x].rect.colliderect(real_time_x_player-20, player.rect.y, player.width, player.height):
                  if player.vel_y >0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                    
                  else:
                    player.health=0
      
              if real_time_x_player>inim_level_1[x].rect.x:
                if inim_level_1[x].rect.colliderect(real_time_x_player+20, player.rect.y, player.width, player.height):
                  if player.vel_y > 0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                    
                  else: 
                    player.health = 0
               
          #CHOQUE Com Inimigos LEVEL2 e feature do Mario          
          if level==2:
            inim_level_2=[inimigo2, inimigo3, inimigo4, inimigo5, inimigo6, inimigo7, inimigooito]
            for x in range(len(inim_level_2)):
              if inim_level_2[x].rect.x>real_time_x_player:
                if inim_level_2[x].rect.colliderect(real_time_x_player-20, player.rect.y, player.width, player.height):
                  if player.vel_y > 0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                  else:
                    player.health=0

              if real_time_x_player>inim_level_2[x].rect.x:
                if inim_level_2[x].rect.colliderect(real_time_x_player+20, player.rect.y, player.width, player.height):
                  if player.vel_y > 0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                  else: 
                    player.health = 0

          #CHOQUE Com Inimigos LEVEL3 e feature do Mario   
          if level==3:
            inim_level_3=[inimigo101, inimigo102, inimigo103, inimigo104, inimigo105, inimigo106, inimigo107, inimigo108, inimigo109, inimigo110]
            for x in range(len(inim_level_3)):
              if inim_level_3[x].rect.x>real_time_x_player:
                if inim_level_3[x].rect.colliderect(real_time_x_player-20, player.rect.y, player.width, player.height):
                  if player.vel_y > 0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                  else:
                    player.health=0
              if real_time_x_player>inim_level_3[x].rect.x:
                if inim_level_3[x].rect.colliderect(real_time_x_player+20, player.rect.y, player.width, player.height):
                  if player.vel_y > 0 or player.vel_y == -12:
                    player.jump = True
                    player.vel_y = -12
                    player.jump = False
                  else: 
                    player.health = 0


          #Inverte as imagens dependendo do sentido que o jogador caminha
          if player.alive:
              if moving_left or moving_right:
                  player.update_action(0)
              else: 
                  player.update_action(1)

          #Caso o jogador morre: tela de morte e restart do jogo
          if player.health == 0:
              screen_scroll=0
              bg_scroll = 0
              tela.fill((0, 0, 0))
              font = pygame.font.Font('freesansbold.ttf', 32)
              text = font.render('Você errou, calouro! Aperte R para reiniciar', True, (255, 255, 255))
              textRect = text.get_rect()
              textRect.center = (screen_width//2, screen_height//2)
              tela.blit(text, textRect)
              if restart==True:
                player.health=100
                player.rect.x=100
                player.rect.y=400
                player.vel_y=0

          player.move(moving_left,moving_right)             

        #FPS
        clock.tick(fps)

        #todos os Inputs para o jogo
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sair=True
            #Movimentação
            if event.type == pygame.KEYDOWN:
                if (event.key == pygame.K_a) and player.health == 100:
                    moving_left= True
                if event.key == pygame.K_d and player.health == 100:
                    moving_right=True
                if event.key == pygame.K_w and player.health == 100:
                    player.jump=True
                if event.key == pygame.K_r and player.health == 0:
                    restart = True

                if event.key == pygame.K_LEFT and player.health == 100:
                    moving_left= True
                if event.key == pygame.K_RIGHT and player.health == 100:
                    moving_right=True
                if event.key == pygame.K_UP and player.health == 100:
                    player.jump=True
                
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_a:
                    moving_left=False
                if event.key == pygame.K_d:
                    moving_right=False
                if event.key == pygame.K_r:
                    restart = False

                if event.key == pygame.K_LEFT:
                    moving_left=False
                if event.key == pygame.K_RIGHT:
                    moving_right=False

        pygame.display.update()          
 
    pygame.quit()


main()
